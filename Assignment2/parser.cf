PDefs.    Program   ::=   [Def] ;
terminator Def "" ;

comment "//" ;
comment "/*" "*/" ;
comment "#" ;


DFun.   Def   ::=   Type Id "(" [Arg] ")" "{" [Stm] "}" ;
separator Arg "," ;
terminator Stm "" ;

ADecl.    Arg   ::=   Type Id ;

SExp.     Stm   ::=   Exp ";" ;

SPrint. Stm ::= NameListId "<<" [Stm] "<<" NameListId ";" ;

SReturn.    Stm   ::= "return" Exp ";" ;
SBlock.     Stm   ::= "{" [Stm] "}" ;

QConstBase.   QConst  ::=   Id ;
QConstRec.    QConst  ::=   Id "::" QConst ;
EQe.          Exp1    ::= QConst ;

EStr.    Exp4 ::= String ;
ELs.     Exp9  ::= Exp9 "<<" Exp10 ;
EId.    Exp15   ::=   Id ;
EApp.   Exp15   ::=   Id "(" [Exp] ")" ;

coercions Exp 15 ;
separator Exp "," ;

L1a. NameListId ::= Id ;
L1b. NameListId ::= Id "::" NameListId ;
L2a. ArgListId ::= Id ;
L2b. ArgListId ::= Id "," ArgListId ;

TString.  Type  ::= "string" ;
Tint.     Type  ::=   "int" ;
Tvoid.    Type  ::=   "void" ;

token Id (letter (letter | digit | '_')*) ;
